{"version":3,"sources":["api.ts","store/index.ts","components/Slider.tsx","components/Title.tsx","components/ProductCard.tsx","components/ProductSlider.tsx","components/Category.tsx","components/Home.tsx","components/Breadcrumbs.tsx","components/PhonesPage.tsx","components/PhonePage.tsx","components/TabletsPage.tsx","components/AccessoriesPage.tsx","components/SearchBar.tsx","components/Favs.tsx","components/Cart.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","components/ScrollToTop.tsx","index.tsx"],"names":["PHONES_URL","getPhones","a","fetch","response","json","result","data","getPhone","id","actions","startLoading","type","hasError","like","phoneId","addToCart","isLoading","state","loading","errorState","error","getAllPhones","phones","getCurrentPhone","phone","getHotPricePhones","sort","b","priceDiscount","getBrandNewPhones","year","getFavs","favs","getCart","cart","addFav","find","fav","filter","loadPhones","dispatch","then","setPhones","catch","loadPhone","setPhone","inititalState","namespaceId","name","capacityAvailable","capacity","priceRegular","colorsAvailable","color","images","description","title","text","screen","resolution","processor","ram","camera","zoom","cell","reserved","store","createStore","action","quantity","item","map","composeWithDevTools","applyMiddleware","thunk","Slider","useState","position","setPosition","offset","slidesMove","display","transform","transition","className","onClick","style","src","alt","Title","props","mapDispatch","setLike","setToCart","setCurrentPhone","connect","liked","addedToCart","to","image","disabled","ProductSlider","useSelector","Math","floor","length","key","Category","phonesLoad","hotPricePhones","brandNewPhones","useEffect","Breadcrumbs","exact","subtitle","path","component","Home","allPhones","localeCompare","currentImage","setCurrentImage","onKeyPress","backgroundColor","size","product","min","max","rand","random","idGenerator","TabletsPage","role","aria-label","AccessoriesPage","searchPhones","placeholder","onChange","e","value","target","toLowerCase","filtered","includes","console","log","removeItem","decrease","increase","overall","push","reduce","activeClassName","render","PhonesPage","PhonePage","Favs","Cart","Footer","href","rel","App","ScrollToTop","pathname","useLocation","window","scrollTo","Root","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ec5fa9e6.chunk.js","sourcesContent":["export const PHONES_URL = 'https://mate.academy/students-api/phones';\n\nexport const getPhones = async <P>(): Promise<P[]> => {\n  const response = await fetch(PHONES_URL);\n  const result = await response.json();\n\n  return result.data;\n};\n\nexport const getPhone = async <P>(id: string): Promise<P> => {\n  const response = await fetch(`${PHONES_URL}/${id}`);\n  const result = await response.json();\n\n  return result.data;\n};\n","import { createStore, AnyAction, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { getPhones, getPhone } from '../api';\nimport { Phones, Phone } from '../interfaces/interfaces';\n\nconst actions = {\n  START_LOADING: 'START_LOADING',\n  SET_PHONES: 'SET_PHONES',\n  SET_PHONE: 'SET_PHONE',\n  HAS_ERROR: 'HAS_ERROR',\n  LIKE: 'LIKE',\n  ADD_TO_CART: 'ADD_TO_CART',\n  REMOVE_FROM_CART: 'REMOVE_FROM_CART',\n  DECREASE_AMOUNT: 'DECREASE_AMOUNT',\n  INCREASE_AMOUNT: 'INCREASE_AMOUNT',\n  SEARCH: 'SEARCH',\n};\n\nexport const startLoading = () => ({ type: actions.START_LOADING });\nexport const setPhones = (phones: Phones[]) => ({ type: actions.SET_PHONES, phones });\nexport const setPhone = (phone: Phone) => ({ type: actions.SET_PHONE, phone });\nexport const hasError = () => ({ type: actions.HAS_ERROR });\nexport const like = (phoneId: string) => ({ type: actions.LIKE, phoneId });\nexport const addToCart = (phoneId: string) => ({ type: actions.ADD_TO_CART, phoneId });\nexport const removeFromCart = (phoneId: string) => ({ type: actions.REMOVE_FROM_CART, phoneId });\nexport const decreaseAmount = (phoneId: string) => ({ type: actions.DECREASE_AMOUNT, phoneId });\nexport const increaseAmount = (phoneId: string) => ({ type: actions.INCREASE_AMOUNT, phoneId });\nexport const search = (phones: Phones[]) => ({ type: actions.SEARCH, phones });\n\nexport const isLoading = (state: RootState) => state.loading;\nexport const errorState = (state: RootState) => state.error;\nexport const getAllPhones = (state: RootState) => state.phones;\nexport const getCurrentPhone = (state: RootState) => state.phone;\nexport const getHotPricePhones = (state: RootState) => (\n  [...state.phones].sort((a, b) => b.priceDiscount - a.priceDiscount)\n);\nexport const getBrandNewPhones = (state: RootState) => (\n  [...state.phones].sort((a, b) => b.year - a.year)\n);\nexport const getFavs = (state: RootState) => state.favs;\nexport const getCart = (state: RootState) => state.cart;\n\nexport const addFav = (state: RootState, id: string) => {\n  const dublicate = state.favs.find((fav: string) => fav === id);\n\n  if (!dublicate) {\n    return { ...state, favs: [...state.favs, id] };\n  }\n\n  return { ...state, favs: state.favs.filter((fav: string) => fav !== id) };\n};\n\nexport const loadPhones = () => {\n  return (dispatch: (arg0: { type: string; phones?: Phones[] }) => void) => {\n    dispatch(startLoading());\n\n    return getPhones<Phones>()\n      .then(phones => dispatch(setPhones(phones)))\n      .catch(() => hasError());\n  };\n};\n\nexport const loadPhone = (id: string) => {\n  return (dispatch: (arg0: { type: string; phone?: Phone }) => void) => {\n    dispatch(startLoading());\n\n    return getPhone<Phone>(id)\n      .then(phone => dispatch(setPhone(phone)))\n      .catch(() => hasError());\n  };\n};\n\nexport type RootState = {\n  loading: boolean;\n  error: boolean;\n  phones: Phones[];\n  phone: Phone;\n  cart: any;\n  favs: any;\n  reserved: Phones[];\n};\n\nconst inititalState: RootState = {\n  loading: false,\n  error: false,\n  phones: [],\n  phone: {\n    id: '',\n    namespaceId: '',\n    name: '',\n    capacityAvailable: [],\n    capacity: '',\n    priceRegular: 0,\n    priceDiscount: 0,\n    colorsAvailable: [],\n    color: '',\n    images: [],\n    description: [\n      {\n        title: '',\n        text: [],\n      },\n      {\n        title: '',\n        text: [],\n      },\n      {\n        title: '',\n        text: [],\n      },\n    ],\n    screen: '',\n    resolution: '',\n    processor: '',\n    ram: '',\n    camera: '',\n    zoom: '',\n    cell: [],\n  },\n  cart: [],\n  favs: [],\n  reserved: [],\n};\n\nconst reducer = (state = inititalState, action: AnyAction) => {\n  switch (action.type) {\n    case actions.START_LOADING:\n      return { ...state, loading: true };\n\n    case actions.SET_PHONES:\n      return {\n        ...state, loading: false, phones: action.phones, reserved: action.phones,\n      };\n\n    case actions.SET_PHONE:\n      return { ...state, loading: false, phone: action.phone };\n\n    case actions.HAS_ERROR:\n      return { ...state, loading: false, error: true };\n\n    case actions.LIKE:\n      return addFav(state, action.phoneId);\n\n    case actions.ADD_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, {\n          id: action.phoneId,\n          quantity: 1,\n        }],\n      };\n\n    case actions.REMOVE_FROM_CART:\n      return { ...state, cart: [...state.cart].filter(item => item.id !== action.phoneId) };\n\n    case actions.DECREASE_AMOUNT:\n      return {\n        ...state,\n        cart: [\n          ...state.cart.map((item: { id: string; quantity: number }) => (\n            item.id === action.phoneId && item.quantity > 1\n              ? {\n                id: item.id,\n                quantity: item.quantity - 1,\n              }\n              : item\n          )),\n        ],\n      };\n\n    case actions.INCREASE_AMOUNT:\n      return {\n        ...state,\n        cart: [\n          ...state.cart.map((item: { id: string; quantity: number }) => (\n            item.id === action.phoneId\n              ? {\n                id: item.id,\n                quantity: item.quantity + 1,\n              }\n              : item\n          )),\n        ],\n      };\n\n    case actions.SEARCH:\n      return {\n        ...state,\n        phones: action.phones,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  inititalState,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React, { FC, useState } from 'react';\n\nconst Slider: FC = () => {\n  const [position, setPosition] = useState(0);\n  const [offset] = useState(1040);\n\n  const slidesMove = {\n    display: 'flex',\n\n    transform: `translateX(${position}px)`,\n\n    transition: 'transform 0.5s',\n  };\n\n  const nextSlide = () => {\n    if (position === -offset * 2) {\n      setPosition(0);\n\n      return;\n    }\n\n    setPosition(position - offset);\n  };\n\n  const prevSlide = () => {\n    if (position === 0) {\n      setPosition(-offset * 2);\n\n      return;\n    }\n\n    setPosition(position + offset);\n  };\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider__main\">\n        <button\n          type=\"button\"\n          className=\"slider__btn\"\n          onClick={prevSlide}\n        >\n          &#8249;\n        </button>\n        <div className=\"slider__container\">\n          <div className=\"slider__slides\">\n            <div style={slidesMove}>\n              <img src=\"img/banner.png\" alt=\"iPhones\" />\n              <img src=\"img/banner.png\" alt=\"iPhones\" />\n              <img src=\"img/banner.png\" alt=\"iPhones\" />\n            </div>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className=\"slider__btn\"\n          onClick={nextSlide}\n        >\n          &#8250;\n        </button>\n      </div>\n\n      <div className=\"slider__indicators\">\n        <div className=\"slider__indicator slider__indicator--active\" />\n        <div className=\"slider__indicator\" />\n        <div className=\"slider__indicator\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React from 'react';\n\nconst Title = (props: { title: React.ReactNode }) => {\n  return (\n    <h1 className=\"title\">{props.title}</h1>\n  );\n};\n\nexport default Title;\n","import React, { FC } from 'react';\nimport {\n  NavLink, HashRouter,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {\n  RootState, like, getFavs, getCart, addToCart, loadPhone,\n} from '../store';\n\nimport { PhoneOfPhones } from '../interfaces/interfaces';\n\ntype Props = {\n  phone: PhoneOfPhones;\n  favs: any;\n  cart: any;\n  setLike: (phoneId: string) => void;\n  setToCart: (phoneId: string) => void;\n  setCurrentPhone: (id: string) => void;\n};\n\nconst ProductCard: FC<Props> = ({\n  phone, setLike, setToCart, setCurrentPhone, favs, cart,\n}) => {\n  const liked = favs.find((fav: string) => fav === phone.phoneId);\n  const addedToCart = cart.find((item: { id: string }) => item.id === phone.phoneId);\n\n  return (\n    <HashRouter>\n      <div className=\"productCard\">\n        <NavLink\n          to={`/phones/${phone.phoneId}`}\n          className=\"productCard__link\"\n          onClick={() => setCurrentPhone(phone.phoneId)}\n        >\n          <div className=\"productCard__img-container\">\n            <img\n              src={phone.image}\n              alt={phone.name}\n              className=\"productCard__img\"\n            />\n          </div>\n          <p className=\"productCard__title\">\n            {phone.name}\n          </p>\n        </NavLink>\n        <h2 className=\"productCard__discount\">\n          $\n          {phone.priceDiscount}\n          &nbsp;\n          <span className=\"productCard__price\">\n            $\n            {phone.priceRegular}\n          </span>\n        </h2>\n        <div className=\"productCard__description\">\n          <p className=\"productCard__info\">\n            Screen\n          </p>\n          <p className=\"productCard__characteristics\">\n            {phone.screen}\n          </p>\n        </div>\n        <div className=\"productCard__description\">\n          <p className=\"productCard__info\">\n            Capacity\n          </p>\n          <p className=\"productCard__characteristics\">\n            {phone.capacity}\n          </p>\n        </div>\n        <div className=\"productCard__description\">\n          <p className=\"productCard__info\">\n            RAM\n          </p>\n          <p className=\"productCard__characteristics\">\n            {phone.ram}\n          </p>\n        </div>\n        <div className=\"productCard__btn\">\n          {\n            addedToCart\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"productCard__btn--added\"\n                  disabled\n                >\n                  Added to cart\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"productCard__btn--cart\"\n                  onClick={() => {\n                    setToCart(phone.phoneId);\n                  }}\n                >\n                  Add to cart\n                </button>\n              )\n          }\n          <button\n            type=\"button\"\n            className=\"productCard__btn--favs\"\n            onClick={() => {\n              setLike(phone.phoneId);\n            }}\n          >\n            {\n              liked\n                ? <img src=\"img/favs-liked.svg\" alt=\"favs logo\" />\n                : <img src=\"img/favs.svg\" alt=\"favs logo\" />\n            }\n          </button>\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nconst mapState = (state: RootState) => ({\n  favs: getFavs(state),\n  cart: getCart(state),\n});\n\nconst mapDispatch = {\n  setLike: like,\n  setToCart: addToCart,\n  setCurrentPhone: loadPhone,\n};\n\nexport default connect(mapState, mapDispatch)(ProductCard);\n","import React, { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { isLoading, errorState } from '../store';\nimport { Phones } from '../interfaces/interfaces';\nimport ProductCard from './ProductCard';\n\ntype Props = {\n  phones: Phones[];\n};\n\nconst ProductSlider: FC<Props> = ({ phones }) => {\n  const loading = useSelector(isLoading);\n  const error = useSelector(errorState);\n\n  const [position, setPosition] = useState(0);\n  const [offset] = useState(1152);\n\n  const slidesMove = {\n    display: 'flex',\n\n    transform: `translateX(${position}px)`,\n\n    transition: 'transform 0.5s',\n  };\n\n  const prev = () => {\n    if (position === 0) {\n      setPosition(-offset * (Math.floor(phones.length / 4) - 1));\n\n      return;\n    }\n\n    setPosition(position + offset);\n  };\n\n  const next = () => {\n    if (position === -offset * (Math.floor(phones.length / 4) - 1)) {\n      setPosition(0);\n\n      return;\n    }\n\n    setPosition(position - offset);\n  };\n\n  return (\n    <div>\n      <div className=\"sliderButtons\">\n        <button\n          type=\"button\"\n          className=\"sliderButtons__btn\"\n          onClick={prev}\n        >\n          <img src=\"img/left-arrow.svg\" alt=\"Left arrow\" />\n        </button>\n        <button\n          type=\"button\"\n          className=\"sliderButtons__btn\"\n          onClick={next}\n        >\n          <img src=\"img/right-arrow.svg\" alt=\"Right arrow\" />\n        </button>\n      </div>\n      <div className=\"productSlider\">\n        {\n          loading\n        && (\n          <div className=\"productSlider__loader\" />\n        )\n        }\n        {\n          error\n        && (\n          <div className=\"productSlider__error\">Loading error...</div>\n        )\n        }\n        <div style={slidesMove}>\n          {phones.map(phone => (\n            <div key={phone.id}>\n              <ProductCard phone={phone} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default ProductSlider;\n","import React from 'react';\nimport { HashRouter, NavLink } from 'react-router-dom';\n\nconst Category = () => {\n  return (\n    <HashRouter>\n      <div className=\"category\">\n        <div className=\"category__list\">\n          <NavLink to=\"/phones\" className=\"category__item\">\n            <div className=\"category__image-wrapper category__image-phones\">\n              <img\n                src=\"img/phones-category.png\"\n                alt=\"Phones\"\n                className=\"category__image\"\n              />\n            </div>\n            <h3 className=\"category__subtitle\">Mobile phones</h3>\n            <p className=\"category__info\">95 models</p>\n          </NavLink>\n          <NavLink to=\"/tablets\" className=\"category__item\">\n            <div className=\"category__image-wrapper category__image-tablets\">\n              <img\n                src=\"img/tablets-category.png\"\n                alt=\"Tablets\"\n                className=\"category__image\"\n              />\n            </div>\n            <h3 className=\"category__subtitle\">Tablets</h3>\n            <p className=\"category__info\">24 models</p>\n          </NavLink>\n          <NavLink to=\"/accessories\" className=\"category__item\">\n            <div className=\"category__image-wrapper category__image-accessories\">\n              <img\n                src=\"img/accessories-category.png\"\n                alt=\"Accessories\"\n                className=\"category__image\"\n              />\n            </div>\n            <h3 className=\"category__subtitle\">Accessories</h3>\n            <p className=\"category__info\">100 models</p>\n          </NavLink>\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Category;\n","import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Phones } from '../interfaces/interfaces';\nimport {\n  RootState,\n  loadPhones,\n  getHotPricePhones,\n  getBrandNewPhones,\n} from '../store';\n\nimport Slider from './Slider';\nimport Title from './Title';\nimport ProductSlider from './ProductSlider';\nimport Category from './Category';\n\ntype Props = {\n  phonesLoad: () => void;\n  hotPricePhones: Phones[];\n  brandNewPhones: Phones[];\n};\n\nconst Home: FC<Props> = ({ phonesLoad, hotPricePhones, brandNewPhones }) => {\n  useEffect(() => {\n    phonesLoad();\n  }, [phonesLoad]);\n\n  return (\n    <div className=\"home\">\n      <Slider />\n      <div className=\"home__slider-wrapper\">\n        <Title title=\"Hot Prices\" />\n        <ProductSlider phones={hotPricePhones} />\n      </div>\n      <Title title=\"Shop by category\" />\n      <Category />\n      <div className=\"home__slider-wrapper\">\n        <Title title=\"Brand new models\" />\n        <ProductSlider phones={brandNewPhones} />\n      </div>\n    </div>\n  );\n};\n\nconst mapState = (state: RootState) => ({\n  hotPricePhones: getHotPricePhones(state),\n  brandNewPhones: getBrandNewPhones(state),\n});\n\nconst mapDispatch = {\n  phonesLoad: loadPhones,\n};\n\nexport default connect(mapState, mapDispatch)(Home);\n","import React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport Home from './Home';\n\nconst Breadcrumbs = (props: { title: React.ReactNode; subtitle: string }) => {\n  return (\n    <div className=\"breadcrumbs\">\n      <NavLink to=\"/\" exact className=\"breadcrumbs__home\">\n        <img\n          src=\"img/icons/home.svg\"\n          alt=\"home icon\"\n        />\n      </NavLink>\n      <img\n        src=\"img/icons/breadcrumbs-arrow.svg\"\n        alt=\"arrow icon\"\n        className=\"breadcrumbs__arrow\"\n      />\n      <NavLink to={`/${props.title}`} className=\"breadcrumbs__title\">\n        {props.title}\n      </NavLink>\n      {\n        props.subtitle\n          ? (\n            <>\n              <img\n                src=\"img/icons/breadcrumbs-arrow.svg\"\n                alt=\"arrow icon\"\n                className=\"breadcrumbs__arrow\"\n              />\n              <p className=\"breadcrumbs__subtitle\">\n                {props.subtitle}\n              </p>\n            </>\n          )\n          : ''\n      }\n      <Route path=\"/\" exact component={Home} />\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllPhones, RootState, loadPhones } from '../store';\n\nimport Breadcrumbs from './Breadcrumbs';\nimport Title from './Title';\nimport ProductCard from './ProductCard';\n\nimport { Phones } from '../interfaces/interfaces';\n\ntype Props = {\n  phonesLoad: () => void;\n  allPhones: Phones[];\n};\n\nconst PhonesPage: FC<Props> = ({ phonesLoad, allPhones }) => {\n  useEffect(() => {\n    phonesLoad();\n  }, [phonesLoad]);\n\n  return (\n    <div className=\"phones\">\n      <Breadcrumbs title=\"Phones\" subtitle=\"\" />\n      <Title title=\"Mobile phones\" />\n      <p className=\"phones__quantity\">\n        {allPhones.length}\n        &nbsp;models\n      </p>\n      <div className=\"phones__grid\">\n        {allPhones\n          .sort((a, b) => a.name.localeCompare(b.name))\n          .map(phone => (\n            <div key={phone.id}>\n              <ProductCard phone={phone} />\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapState = (state: RootState) => ({\n  allPhones: getAllPhones(state),\n});\n\nconst mapDispatch = {\n  phonesLoad: loadPhones,\n};\n\nexport default connect(mapState, mapDispatch)(PhonesPage);\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { FC, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Title from './Title';\nimport { Phone, Phones } from '../interfaces/interfaces';\nimport {\n  RootState, getCurrentPhone, getAllPhones, like, addToCart, getFavs, getCart, getBrandNewPhones,\n} from '../store';\nimport Breadcrumbs from './Breadcrumbs';\nimport ProductSlider from './ProductSlider';\n\ntype Props = {\n  phoneId: string;\n  phone: Phone;\n  phones: Phones[];\n  favs: any;\n  cart: any;\n  brandNewPhones: Phones[];\n  setLike: (phoneId: string) => void;\n  setToCart: (phoneId: string) => void;\n};\n\nconst PhonePage: FC<Props> = ({\n  phone, phones, setLike, setToCart, favs, cart, brandNewPhones,\n}) => {\n  const [currentImage, setCurrentImage] = useState('');\n  const liked = favs.find((fav: string) => fav === phone.id);\n  const addedToCart = cart.find((item: { id: string }) => item.id === phone.id);\n\n  const idGenerator = (min: number, max: number) => {\n    const rand = min + Math.random() * (max + 1 - min);\n\n    return Math.floor(rand);\n  };\n\n  useEffect(() => {\n    setCurrentImage(phone.images[0]);\n  }, [phone.images]);\n\n  return (\n    <div className=\"phone\">\n      <Breadcrumbs title=\"Phones\" subtitle={phone.name} />\n\n      <NavLink to=\"/\" className=\"phone__breadcrumb-link\">\n        <div className=\"phone__breadcrumb\">\n          <img\n            src=\"img/icons/breadcrumbs-arrow.svg\"\n            alt=\"back icon\"\n            className=\"phone__breadcrumb-arrow\"\n          />\n          <p className=\"phone__breadcrumb-text\">Back</p>\n        </div>\n      </NavLink>\n\n      <Title title={phone.name} />\n\n      <div className=\"phone__main\">\n        <div className=\"phone__gallery\">\n          <ul\n            className=\"phone__gallery-list\"\n          >\n            {phone.images.map(image => (\n              <li\n                className=\"phone__gallery-item\"\n                key={image}\n                onClick={() => setCurrentImage(image)}\n                onKeyPress={() => setCurrentImage(image)}\n              >\n                <img\n                  src={image}\n                  alt=\"phone pic\"\n                  className=\"phone__gallery-img\"\n                />\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"phone__gallery-item-large\">\n            <img\n              src={currentImage}\n              alt=\"phone pic\"\n              className=\"phone__gallery-img-large\"\n            />\n          </div>\n        </div>\n\n        <div className=\"phone__card\">\n          <div className=\"phone__card-block\">\n            <p className=\"phone__label\">\n              Available colors\n            </p>\n            <div className=\"phone__colors\">\n              {phone.colorsAvailable.map(color => (\n                <div className=\"phone__color-wrapper\" key={color}>\n                  <div style={{ backgroundColor: color }} className=\"phone__color\" />\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"phone__card-block\">\n            <p className=\"phone__label\">\n              Select capacity\n            </p>\n            <div className=\"phone__capacities\">\n              {phone.capacityAvailable.map(size => (\n                <div className=\"phone__capacity\">\n                  {size}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"phone__price-block\">\n            <div className=\"phone__discount\">\n              $\n              {\n              phones.find(product => product.phoneId === phone.id)?.priceDiscount\n              }\n            </div>\n            <div className=\"phone__price\">\n              $\n              {\n                phones.find(product => product.phoneId === phone.id)?.priceRegular\n              }\n            </div>\n          </div>\n\n          <div className=\"phone__btn-block\">\n            {\n              addedToCart\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"phone__btn--added\"\n                    disabled\n                  >\n                    Added to cart\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"phone__btn--cart\"\n                    onClick={() => {\n                      setToCart(phone.id);\n                    }}\n                  >\n                    Add to cart\n                  </button>\n                )\n            }\n            <button\n              type=\"button\"\n              className=\"phone__btn--favs\"\n              onClick={() => {\n                setLike(phone.id);\n              }}\n            >\n              {\n                liked\n                  ? <img src=\"img/favs-liked.svg\" alt=\"favs logo\" />\n                  : <img src=\"img/favs.svg\" alt=\"favs logo\" />\n              }\n            </button>\n          </div>\n\n          <div className=\"phone__info-block\">\n            <div className=\"phone__info-keys\">\n              <p className=\"phone__info-key\">\n                Screen\n              </p>\n              <p className=\"phone__info-key\">\n                Resolution\n              </p>\n              <p className=\"phone__info-key\">\n                Processor\n              </p>\n              <p className=\"phone__info-key\">\n                RAM\n              </p>\n            </div>\n            <div className=\"phone__info-values\">\n              <p className=\"phone__info-value\">\n                {phone.screen}\n              </p>\n              <p className=\"phone__info-value\">\n                {phone.resolution}\n              </p>\n              <p className=\"phone__info-value\">\n                {phone.processor}\n              </p>\n              <p className=\"phone__info-value\">\n                {phone.ram}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"phone__id\">\n          ID:\n          {' '}\n          {idGenerator(800000, 1000000)}\n        </div>\n      </div>\n\n      <div className=\"phone__description\">\n        <div className=\"phone__about\">\n          <h2 className=\"phone__subtitle\">About</h2>\n          {phone.description.map(text => (\n            <>\n              <h3 className=\"phone__subsubtitle\">{text.title}</h3>\n              <p className=\"phone__text\">{text.text}</p>\n            </>\n          ))}\n        </div>\n\n        <div className=\"phone__specs\">\n          <h2 className=\"phone__subtitle\">Tech specs</h2>\n          <div className=\"phone__characteristics\">\n            <div className=\"phone__characteristics-keys\">\n              <p className=\"phone__characteristics-key\">\n                Screen\n              </p>\n              <p className=\"phone__characteristics-key\">\n                Resolution\n              </p>\n              <p className=\"phone__characteristics-key\">\n                Processor\n              </p>\n              <p className=\"phone__characteristics-key\">\n                RAM\n              </p>\n              <p className=\"phone__characteristics-key\">\n                Built in memory\n              </p>\n              <p className=\"phone__characteristics-key\">\n                Camera\n              </p>\n              <p className=\"phone__characteristics-key\">\n                Zoom\n              </p>\n              <p className=\"phone__characteristics-key\">\n                Cell\n              </p>\n            </div>\n            <div className=\"phone__characteristics-values\">\n              <p className=\"phone__characteristics-value\">\n                {phone.screen}\n              </p>\n              <p className=\"phone__characteristics-value\">\n                {phone.resolution}\n              </p>\n              <p className=\"phone__characteristics-value\">\n                {phone.processor}\n              </p>\n              <p className=\"phone__characteristics-value\">\n                {phone.ram}\n              </p>\n              <p className=\"phone__characteristics-value\">\n                {phone.capacity}\n              </p>\n              <p className=\"phone__characteristics-value\">\n                {phone.camera}\n              </p>\n              <p className=\"phone__characteristics-value\">\n                {phone.zoom}\n              </p>\n              <p className=\"phone__characteristics-value\">\n                {phone.cell}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"home__slider-wrapper\">\n        <Title title=\"You may also like\" />\n        <ProductSlider phones={brandNewPhones} />\n      </div>\n    </div>\n  );\n};\n\nconst mapState = (state: RootState) => ({\n  phone: getCurrentPhone(state),\n  phones: getAllPhones(state),\n  favs: getFavs(state),\n  cart: getCart(state),\n  brandNewPhones: getBrandNewPhones(state),\n});\n\nconst mapDispatch = {\n  setLike: like,\n  setToCart: addToCart,\n};\n\nexport default connect(mapState, mapDispatch)(PhonePage);\n","import React, { FC } from 'react';\n\nimport Breadcrumbs from './Breadcrumbs';\nimport Title from './Title';\n\nconst TabletsPage: FC = () => {\n  return (\n    <div className=\"tablets\">\n      <Breadcrumbs title=\"Tablets\" subtitle=\"\" />\n      <Title title=\"Tablets\" />\n      <h3 className=\"tablets__oops\">\n        There is no tablets yet. Please, come later\n        <span role=\"img\" aria-label=\"Grinny\">😅</span>\n      </h3>\n    </div>\n  );\n};\n\nexport default TabletsPage;\n","import React, { FC } from 'react';\n\nimport Breadcrumbs from './Breadcrumbs';\nimport Title from './Title';\n\nconst AccessoriesPage: FC = () => {\n  return (\n    <div className=\"accessories\">\n      <Breadcrumbs title=\"Accessories\" subtitle=\"\" />\n      <Title title=\"Accessories\" />\n      <h3 className=\"accessories__oops\">\n        There is no accessories yet. Please, come later\n        <span role=\"img\" aria-label=\"Grinny\">😅</span>\n      </h3>\n    </div>\n  );\n};\n\nexport default AccessoriesPage;\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { RootState, getAllPhones, search } from '../store';\nimport { Phones } from '../interfaces/interfaces';\n\ntype Props = {\n  phones: Phones[];\n  searchPhones: (phones: Phones[]) => void;\n};\n\nconst SearchBar: FC<Props> = ({ phones, searchPhones }) => {\n  const phonesSearch = (e: { target: { value: string } }) => {\n    const value = e.target.value.toLowerCase();\n    const filtered = phones.filter(phone => phone.name.toLowerCase().includes(value));\n\n    console.log(filtered);\n\n    return searchPhones(phones);\n  };\n\n  return (\n    <div className=\"searchbar\">\n      <input\n        type=\"text\"\n        placeholder=\"Search in phones...\"\n        className=\"searchbar__input\"\n        onChange={phonesSearch}\n      />\n      <img\n        src=\"img/icons/search.svg\"\n        alt=\"search icon\"\n        className=\"searchbar__icon\"\n      />\n    </div>\n  );\n};\n\nconst mapState = (state: RootState) => ({\n  phones: getAllPhones(state),\n});\n\nconst mapDispatch = {\n  searchPhones: search,\n};\n\nexport default connect(mapState, mapDispatch)(SearchBar);\n","import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Breadcrumbs from './Breadcrumbs';\nimport Title from './Title';\nimport {\n  RootState, getFavs, getAllPhones, loadPhones,\n} from '../store';\nimport ProductCard from './ProductCard';\nimport { Phones } from '../interfaces/interfaces';\n\ntype Props = {\n  favs: any;\n  phonesLoad: () => void;\n  allPhones: Phones[];\n};\n\nconst Favs: FC<Props> = ({ favs, phonesLoad, allPhones }) => {\n  useEffect(() => {\n    phonesLoad();\n  }, [phonesLoad]);\n\n  return (\n    <div className=\"favs\">\n      <Breadcrumbs title=\"Favorites\" subtitle=\"\" />\n      <Title title=\"Favorites\" />\n      {\n        favs.length\n          ? (\n            <>\n              <p className=\"favs__quantity\">\n                {favs.length}\n                &nbsp;items\n              </p>\n              <div className=\"favs__grid\">\n                {allPhones\n                  .filter(phone => favs.find((fav: string) => phone.phoneId === fav))\n                  .map(phone => (\n                    <div key={phone.id}>\n                      <ProductCard phone={phone} />\n                    </div>\n                  ))}\n              </div>\n            </>\n          )\n          : (\n            <h3 className=\"favs__oops\">\n              Products that you like will be displayed here\n              <span role=\"img\" aria-label=\"Grinny\">👍</span>\n            </h3>\n          )\n      }\n    </div>\n  );\n};\n\nconst mapState = (state: RootState) => ({\n  favs: getFavs(state),\n  allPhones: getAllPhones(state),\n});\n\nconst mapDispatch = {\n  phonesLoad: loadPhones,\n};\n\nexport default connect(mapState, mapDispatch)(Favs);\n","import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport Title from './Title';\nimport {\n  RootState,\n  getCart,\n  getAllPhones,\n  loadPhones,\n  removeFromCart,\n  decreaseAmount,\n  increaseAmount,\n  loadPhone,\n} from '../store';\nimport { Phones } from '../interfaces/interfaces';\n\ntype Props = {\n  phonesLoad: () => void;\n  removeItem: (phoneId: string) => void;\n  decrease: (phoneId: string) => void;\n  increase: (phoneId: string) => void;\n  setCurrentPhone: (id: string) => void;\n  phones: Phones[];\n  cart: any;\n};\n\nconst Cart: FC<Props> = ({\n  phonesLoad, removeItem, decrease, increase, phones, cart, setCurrentPhone,\n}) => {\n  useEffect(() => {\n    phonesLoad();\n  }, [phonesLoad]);\n\n  const overall: number[] = [];\n\n  phones\n    .filter(phone => cart.find((item: { id: string }) => phone.phoneId === item.id))\n    .filter(phone => overall.push(phone.priceDiscount * cart\n      .find((item: { id: string }) => item.id === phone.phoneId)\n      .quantity));\n\n  return (\n    <div className=\"cart\">\n      <NavLink to=\"/\" className=\"cart__breadcrumb-link\">\n        <div className=\"cart__breadcrumb\">\n          <img\n            src=\"img/icons/breadcrumbs-arrow.svg\"\n            alt=\"back icon\"\n            className=\"cart__breadcrumb-arrow\"\n          />\n          <p className=\"cart__breadcrumb-text\">Back</p>\n        </div>\n      </NavLink>\n      <Title title=\"Cart\" />\n\n      {\n        cart.length\n          ? (\n            <div className=\"cart__container\">\n              <div className=\"cart__items\">\n                {\n                  phones\n                    .filter(phone => cart.find((item: { id: string }) => phone.phoneId === item.id))\n                    .map(phone => (\n                      <div className=\"cart__phone\">\n                        <button\n                          type=\"button\"\n                          className=\"cart__remove\"\n                          onClick={() => removeItem(phone.phoneId)}\n                        >\n                          <img src=\"img/icons/remove.svg\" alt=\"remove icon\" />\n                        </button>\n                        <img\n                          src={phone.image}\n                          alt={phone.name}\n                          className=\"cart__phone-img\"\n                        />\n                        <NavLink\n                          to={`/phones/${phone.phoneId}`}\n                          className=\"cart__phone-name\"\n                          onClick={() => setCurrentPhone(phone.phoneId)}\n                        >\n                          {phone.name}\n                        </NavLink>\n                        <div className=\"cart__phone-amount\">\n                          <button\n                            type=\"button\"\n                            className=\"cart__phone-amount-btn\"\n                            onClick={() => decrease(phone.phoneId)}\n                          >\n                            -\n                          </button>\n                          <p className=\"cart__phone-amount-text\">\n                            {\n                              cart\n                                .find((item: { id: string }) => item.id === phone.phoneId)\n                                .quantity\n                            }\n                          </p>\n                          <button\n                            type=\"button\"\n                            className=\"cart__phone-amount-btn\"\n                            onClick={() => increase(phone.phoneId)}\n                          >\n                            +\n                          </button>\n                        </div>\n                        <h2>\n                          $\n                          {\n                            phone.priceDiscount * cart\n                              .find((item: { id: string }) => item.id === phone.phoneId)\n                              .quantity\n                          }\n                        </h2>\n                      </div>\n                    ))\n                }\n              </div>\n              <div className=\"cart__overall\">\n                <div className=\"cart__overall-container\">\n                  <h2 className=\"cart__overall-sum\">\n                    $\n                    {overall.reduce((a: number, b: number) => {\n                      return a + b;\n                    }, 0)}\n                  </h2>\n                  <p className=\"cart__overall-extra\">\n                    Total for\n                    {' '}\n                    {cart.length}\n                    {' '}\n                    items\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"cart__checkout-btn\"\n                >\n                  Checkout\n                </button>\n              </div>\n            </div>\n          )\n          : (\n            <h3 className=\"cart__oops\">\n              Add your first purchase here\n              <span role=\"img\" aria-label=\"Grinny\">🛒</span>\n            </h3>\n          )\n      }\n    </div>\n  );\n};\n\nconst mapState = (state: RootState) => ({\n  phones: getAllPhones(state),\n  cart: getCart(state),\n});\n\nconst mapDispatch = {\n  phonesLoad: loadPhones,\n  removeItem: removeFromCart,\n  decrease: decreaseAmount,\n  increase: increaseAmount,\n  setCurrentPhone: loadPhone,\n};\n\nexport default connect(mapState, mapDispatch)(Cart);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  NavLink,\n  Route,\n  HashRouter,\n  Switch,\n} from 'react-router-dom';\n\nimport Home from './Home';\nimport PhonesPage from './PhonesPage';\nimport PhonePage from './PhonePage';\nimport TabletsPage from './TabletsPage';\nimport AccessoriesPage from './AccessoriesPage';\nimport SearchBar from './SearchBar';\nimport Favs from './Favs';\nimport { RootState, getFavs, getCart } from '../store';\nimport Cart from './Cart';\n\ntype Props = {\n  favs: any;\n  cart: any;\n};\n\nconst Header: FC<Props> = ({ favs, cart }) => {\n  return (\n    <HashRouter>\n      <nav className=\"nav\">\n        <img\n          src=\"img/logo.svg\"\n          alt=\"Logo\"\n          className=\"nav__logo\"\n        />\n        <ul className=\"nav__links\">\n          <NavLink\n            to=\"/\"\n            exact\n            activeClassName=\"nav__selected\"\n            className=\"nav__items\"\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/phones\"\n            activeClassName=\"nav__selected\"\n            className=\"nav__items\"\n          >\n            Phones\n          </NavLink>\n          <NavLink\n            to=\"/tablets\"\n            activeClassName=\"nav__selected\"\n            className=\"nav__items\"\n          >\n            Tablets\n          </NavLink>\n          <NavLink\n            to=\"accessories\"\n            activeClassName=\"nav__selected\"\n            className=\"nav__items\"\n          >\n            Accessories\n          </NavLink>\n        </ul>\n        <div className=\"nav__fav-cart-container\">\n          <Route path=\"/phones\" exact render={() => <SearchBar />} />\n          <NavLink\n            to=\"/favs\"\n            activeClassName=\"nav__selected--1\"\n            className=\"nav__items\"\n          >\n            {\n              favs.length\n                ? (\n                  <>\n                    <div className=\"nav__counter\">\n                      {favs.length}\n                    </div>\n                    <img\n                      src=\"img/favs.svg\"\n                      alt=\"Favorites\"\n                      className=\"nav__favs\"\n                    />\n                  </>\n                )\n                : (\n                  <img\n                    src=\"img/favs.svg\"\n                    alt=\"Favorites\"\n                    className=\"nav__favs\"\n                  />\n                )\n            }\n          </NavLink>\n          <NavLink\n            to=\"/cart\"\n            activeClassName=\"nav__selected--1\"\n            className=\"nav__items\"\n          >\n            {\n              cart.length\n                ? (\n                  <>\n                    <div className=\"nav__counter\">\n                      {cart.length}\n                    </div>\n                    <img\n                      src=\"img/cart.svg\"\n                      alt=\"Cart\"\n                      className=\"nav__cart\"\n                    />\n                  </>\n                )\n                : (\n                  <img\n                    src=\"img/cart.svg\"\n                    alt=\"Cart\"\n                    className=\"nav__cart\"\n                  />\n                )\n            }\n          </NavLink>\n        </div>\n      </nav>\n\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/phones\" exact component={PhonesPage} />\n        <Route path=\"/phones/:phoneId?\" exact component={PhonePage} />\n        <Route path=\"/tablets\" exact component={TabletsPage} />\n        <Route path=\"/accessories\" exact component={AccessoriesPage} />\n        <Route path=\"/favs\" exact component={Favs} />\n        <Route path=\"/cart\" exact component={Cart} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nconst mapState = (state: RootState) => ({\n  favs: getFavs(state),\n  cart: getCart(state),\n});\n\nexport default connect(mapState)(Header);\n","import React from 'react';\nimport {\n  HashRouter,\n  NavLink,\n} from 'react-router-dom';\n\nconst Footer = () => {\n  return (\n    <HashRouter>\n      <div className=\"footer\">\n        <nav className=\"footer__nav\">\n          <img\n            src=\"img/logo.svg\"\n            alt=\"Logo\"\n            className=\"footer__logo\"\n          />\n          <ul className=\"footer__menu\">\n            <a\n              href=\"https://github.com/tyooma\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              className=\"footer__menu-item\"\n            >\n              GitHub\n            </a>\n            <NavLink to=\"/contacts\" className=\"footer__menu-item\">Contacts</NavLink>\n            <NavLink to=\"/rights\" className=\"footer__menu-item\">Rights</NavLink>\n          </ul>\n          <div className=\"footer__home\">\n            <p className=\"footer__text\">Back to top</p>\n            <button type=\"button\" className=\"footer__button\">\n              <img\n                src=\"img/back-to-top-arrow.svg\"\n                alt=\"Back to top arrow\"\n                className=\"footer__arrow\"\n              />\n            </button>\n          </div>\n        </nav>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport './styles/App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <Footer />\n  </div>\n);\n\nexport default App;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport ScrollToTop from './components/ScrollToTop';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <ScrollToTop />\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}